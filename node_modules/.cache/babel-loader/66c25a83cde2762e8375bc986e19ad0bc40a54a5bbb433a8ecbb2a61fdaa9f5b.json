{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\daryl\\\\source\\\\repos\\\\Live-Event\\\\live-event\\\\src\\\\composants\\\\programmation\\\\ConcertList.js\";\nimport { Link } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ConcertList = ({\n  concerts,\n  artist,\n  jour,\n  date,\n  horaire,\n  scène,\n  Description,\n  Source,\n  Lien,\n  image,\n  FamousSong\n}) => {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"concert\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: artist\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 9\n    }, this), concerts.map(concert => /*#__PURE__*/_jsxDEV(Link, {\n      className: \"nav-link\",\n      to: `/Artist/${concert.id}`,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"concert-preview\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"artistName\",\n          children: concert.artist\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 16,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"detailsPicture\",\n          children: concert.startTime.substring(0, 10)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 18,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"scenePicture\",\n          children: concert.scène\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 19,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n          className: \"imgConcert\",\n          src: `image-${concert.id}.jpg`,\n          alt: \"artist\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 21,\n          columnNumber: 13\n        }, this)]\n      }, concert.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 13\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 10,\n    columnNumber: 5\n  }, this);\n};\n_c = ConcertList;\nexport default ConcertList;\nvar _c;\n$RefreshReg$(_c, \"ConcertList\");","map":{"version":3,"names":["Link","jsxDEV","_jsxDEV","ConcertList","concerts","artist","jour","date","horaire","scène","Description","Source","Lien","image","FamousSong","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","concert","to","id","startTime","substring","src","alt","_c","$RefreshReg$"],"sources":["C:/Users/daryl/source/repos/Live-Event/live-event/src/composants/programmation/ConcertList.js"],"sourcesContent":["\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst ConcertList = ({concerts, artist,jour,date,horaire,scène, Description,Source, Lien, image, FamousSong }) => {\r\n    \r\n\r\n    return ( \r\n\r\n\r\n    <div className=\"concert\">\r\n      \r\n        <h2>{artist}</h2>\r\n         {concerts.map((concert) => (\r\n            <Link className=\"nav-link\" to={`/Artist/${concert.id}`}>\r\n            <div className=\"concert-preview\" key = {concert.id}>                \r\n            <h2 className=\"artistName\">{concert.artist}</h2>\r\n            {/* pour récuperer la date seulement */}\r\n            <p className=\"detailsPicture\">{concert.startTime.substring(0, 10)}</p>\r\n            <p className=\"scenePicture\">{concert.scène}</p>\r\n                 {/*template string pour extraire l'image correspondante  */}\r\n            <img className=\"imgConcert\" src={`image-${concert.id}.jpg`} alt=\"artist\" />                 \r\n            </div>\r\n            </Link>\r\n        ))}\r\n    \r\n        </div>\r\n     );\r\n}\r\n \r\nexport default ConcertList;"],"mappings":";AACA,SAASA,IAAI,QAAQ,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAExC,MAAMC,WAAW,GAAGA,CAAC;EAACC,QAAQ;EAAEC,MAAM;EAACC,IAAI;EAACC,IAAI;EAACC,OAAO;EAACC,KAAK;EAAEC,WAAW;EAACC,MAAM;EAAEC,IAAI;EAAEC,KAAK;EAAEC;AAAW,CAAC,KAAK;EAG9G,oBAGAZ,OAAA;IAAKa,SAAS,EAAC,SAAS;IAAAC,QAAA,gBAEpBd,OAAA;MAAAc,QAAA,EAAKX;IAAM;MAAAY,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,EACfhB,QAAQ,CAACiB,GAAG,CAAEC,OAAO,iBACnBpB,OAAA,CAACF,IAAI;MAACe,SAAS,EAAC,UAAU;MAACQ,EAAE,EAAE,WAAWD,OAAO,CAACE,EAAE,EAAG;MAAAR,QAAA,eACvDd,OAAA;QAAKa,SAAS,EAAC,iBAAiB;QAAAC,QAAA,gBAChCd,OAAA;UAAIa,SAAS,EAAC,YAAY;UAAAC,QAAA,EAAEM,OAAO,CAACjB;QAAM;UAAAY,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAK,CAAC,eAEhDlB,OAAA;UAAGa,SAAS,EAAC,gBAAgB;UAAAC,QAAA,EAAEM,OAAO,CAACG,SAAS,CAACC,SAAS,CAAC,CAAC,EAAE,EAAE;QAAC;UAAAT,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,eACtElB,OAAA;UAAGa,SAAS,EAAC,cAAc;UAAAC,QAAA,EAAEM,OAAO,CAACb;QAAK;UAAAQ,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,eAE/ClB,OAAA;UAAKa,SAAS,EAAC,YAAY;UAACY,GAAG,EAAE,SAASL,OAAO,CAACE,EAAE,MAAO;UAACI,GAAG,EAAC;QAAQ;UAAAX,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC;MAAA,GANnCE,OAAO,CAACE,EAAE;QAAAP,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAO7C;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACA,CACT,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAEG,CAAC;AAEd,CAAC;AAAAS,EAAA,GAxBK1B,WAAW;AA0BjB,eAAeA,WAAW;AAAC,IAAA0B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}