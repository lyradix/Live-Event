import React, { Component, FC, ReactNode } from "react";
export type renderFunc<ListItem> = (item: ListItem, key: string) => ReactNode | JSX.Element;
export type renderItem<ListItem> = ReactNode | FC<any> | Component | renderFunc<ListItem> | JSX.Element;
export declare const renderBlank: (renderWhenEmpty?: ReactNode | (() => JSX.Element)) => JSX.Element;
export declare const handleRenderGroupSeparator: (CustomSeparator: any) => (sep: any, idx: number | string) => JSX.Element;
export declare const handleRenderItem: <ListItem>(renderItem: renderFunc<ListItem>, renderSeparator?: ((s: ListItem, i: number | string) => ReactNode) | null) => (item: ListItem, key: number | string) => string | number | boolean | React.ReactFragment | JSX.Element | null | undefined;
export declare const btnPosition: (scrollContainer: HTMLElement, btn: HTMLElement) => (vertical: string, horizontal: string, padding?: number, offset?: number) => void;
//# sourceMappingURL=uiFunctions.d.ts.map